***********************************************************************************************************
**** Frequencies of Limited Range Array Elements ( 01/11/23 ) ****

class Solution{
    public:
    //Function to count the frequency of all elements from 1 to N in the array.
    void frequencyCount(vector<int>& arr,int N, int P)
    { 
        vector<int> v(N,0);
        for(int i=0;i<N;i++){
            if(arr[i] > 0 && arr[i] <= N){
                v[arr[i]-1]++;
            }
        }
        arr = v;
    }
};

************************************************************************************************************ 
**** Minimum distance between two numbers ( 02/11/23 ) ****

class Solution{
  public:
  
 void rev(int arr[],int n){
     int i = 0,j = n-1;
     while(i<j){
         swap(arr[i],arr[j]);
         i++; j--;
     }
 }
   
    bool check(int arr[],int n,int v){
        for(int i=0;i<n;i++){
            if(arr[i] == v){
                return true;
            }
        }
        return false;
    }
    

  
    int minDist(int arr[], int n, int x, int y) {
        if(check(arr,n,x)==false || check(arr,n,y)==false){
            return -1;
        }
        int ans = INT_MAX;
        int a =0,b=0;
        while(b<n){
            while(b<n && arr[b]!=y){
                b++;
            }
            while(b<n && a<b){
                if(arr[a]==x){
                    ans = min(ans,abs(b-a));
                }
                a++;
            }
            b++;
        }
        
        rev(arr,n);
        a =0,b=0;
        while(b<n){
            while(b<n && arr[b]!=y){
                b++;
            }
            while(b<n && a<b){
                if(arr[a]==x){
                    ans = min(ans,abs(b-a));
                }
                a++;
            }
            b++;
        }
        return ans;
    }
};

**********************************************************************************************************
