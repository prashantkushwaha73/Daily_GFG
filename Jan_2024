*************************************************************************************************************
**** Reverse First K elements of Queue ( 12/01/24 ) ****

class Solution
{
    public:
    queue<int> modifyQueue(queue<int> q, int k) {
        stack<int> s;
        queue<int> p;
        while(!q.empty()){
            if(s.size()<k){
                s.push(q.front());
                q.pop();
            }
            else{
                p.push(q.front());
                q.pop();
            }
        }
        while(!s.empty()){
            q.push(s.top());
            s.pop();
        }
        while(!p.empty()){
            q.push(p.front());
            p.pop();
        }
        return q;
    }
};

********************************************************************************************************************
**** Insertion Sort for Singly Linked List ( 13/01/24 ) ****

class Solution
{
    public:
    Node* insertionSort(struct Node* head)
    {
        Node* ans = head;
        Node* final = head;
        Node* temp;
        Node* store;
        while(ans){
            store = ans;
            temp = ans;
            while(temp){
                if(temp->data < store->data){
                    store = temp;
                }
                temp=temp->next;
            }
            swap(ans->data,store->data);
            ans=ans->next;
        }
        return final;
    }
};

****************************************************************************************************************************
**** Find duplicate rows in a binary matrix ( 14/01/24 ) ****

class Solution
{   
    public:
    vector<int> repeatedRows(vector<vector<int>> &matrix, int M, int N) 
    { 
        unordered_map<string,bool> m;
        vector<int> ans;
        string str="";
        for(int i=0;i<M;i++){
            str = "";
            for(int j=0;j<N;j++){
                str+=to_string(matrix[i][j]);
            }
            if(m[str]){
                ans.push_back(i);
            }
            else{
                m[str]=true;
            }
        }
        return ans;
    } 
};

************************************************************************************************************************
