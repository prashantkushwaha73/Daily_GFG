************************************************************************************************************************
**** Arrange Consonants and Vowels ( 01/05/24 ) ****

class Solution {
  public:
    // task is to complete this function
    // function should return head to the list after making
    // necessary arrangements
    
    bool check(char c){
        if(c=='a' || c=='e' || c=='i' || c=='o' || c=='u'){
            return true;
        }
        return false;
    }
    
    struct Node* arrangeCV(Node* head) {
        Node* v=new Node('1');
        Node* c=new Node('1');
        Node* tv=v; Node* tc=c;
        Node* temp = head;
        while(temp){
            if(check(temp->data)){
                head = temp->next;
                temp->next = NULL;
                tv->next = temp;
                tv = temp;
                temp = head;
            }
            else{
                head = temp->next;
                temp->next = NULL;
                tc->next = temp;
                tc = temp;
                temp = head;
            }
        }
        if(tv->data != '1'){
            Node* ans = v->next;
            tv->next = c->next;
            return ans;
        }
        return c->next;
    }
};

**************************************************************************************************************************************
**** K distance from root ( 03/05/24 ) ****

class Solution
{
    public:
    // function should print the nodes at k distance from root
    
    void solve(Node* root,int count,int& k,vector<int>& ans){
        if(root==NULL){
            return;
        }
        if(count==k){
            ans.push_back(root->data);
        }
        solve(root->left,count+1,k,ans);
        solve(root->right,count+1,k,ans);
    }
    
    vector<int> Kdistance(struct Node *root, int k)
    {
      vector<int> ans;
      solve(root,0,k,ans);
      return ans;
    }
};

******************************************************************************************************************************************
