*****************************************************************************************************************
**** Peak element ( 01/03/24 ) ****

class Solution
{
    public:
    int peakElement(int arr[], int n)
    {
        if(n==1){
            return 0;
        }
       for(int i=0;i<n;i++){
           if(i==0 && arr[1]<=arr[0]){
               return 0;
           }
           else if(i==n-1 && arr[n-2]<=arr[n-1]){
               return n-1;
           }
           else{
               if(arr[i-1]<=arr[i] && arr[i+1]<=arr[i]){
                   return i;
               }
           }
       }
       return -1;
    }
};

****************************************************************************************************************************************
**** First element to occur k times ( 03/02/24 ) ****

class Solution{
    public:
    int firstElementKTime(int n, int k, int a[])
    {
        unordered_map<int,int> m;
        for(int i=0;i<n;i++){
            m[a[i]]++;
            if(m[a[i]]>=k){
                return a[i];
            }
        }
        return -1;
    }
};

*******************************************************************************************************************************************
